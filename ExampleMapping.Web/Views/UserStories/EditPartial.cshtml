@using System.Threading.Tasks
@using ExampleMapping.Web.Models
@using ExampleMapping.Web.Views
@using Newtonsoft.Json
@model UserStory

@{ 
    var viewType = (ViewType)Enum.Parse(typeof(ViewType), (ViewData["ViewType"] ?? string.Empty).ToString());
    var pageTitle = viewType == ViewType.CreateNew ? "New User Story" : "Edit User Story";
    var editButtonContent = viewType == ViewType.CreateNew ? "Create" : "Save";
    var aspAction = viewType == ViewType.CreateNew ? "Create" : "Edit";

    var initialDataAsJson = Json.Serialize(
        Model ?? new UserStory { Name="", Rules = new List<Rule>(), Questions = new List<Question>() }, 
        new JsonSerializerSettings { StringEscapeHandling = StringEscapeHandling.EscapeHtml });
}

<h2>@pageTitle</h2>

<form asp-controller="UserStories" asp-action="@aspAction" method="post" class="form-horizontal" role="form">
    <div class="form-horizontal">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div id="content"></div>
        @if (viewType == ViewType.EditExisting)
        {
            <input type="hidden" asp-for="Id"/>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="Submit" value="@editButtonContent" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>
<script>
    ReactDOM.render(
        React.createElement(UserStoryEditForm, { data: @initialDataAsJson }),
        document.getElementById('content')
    );
</script>
