@using System.Threading.Tasks
@using ExampleMapping.Web.Models
@using ExampleMapping.Web.Views
@model ExampleMapping.Web.Models.UserStory

@{ 
    var viewType = (ViewType)Enum.Parse(typeof(ViewType), (ViewData["ViewType"] ?? string.Empty).ToString());
    var pageTitle = viewType == ViewType.CreateNew ? "New User Story" : "Edit User Story";
    var editButtonContent = viewType == ViewType.CreateNew ? "Create" : "Save";
    var aspAction = viewType == ViewType.CreateNew ? "Create" : "Edit";
}

<h2>@pageTitle</h2>

<form asp-controller="UserStories" asp-action="@aspAction" method="post" class="form-horizontal" role="form">
    <div class="form-horizontal">
        <div asp-validation-summary="All" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="Name" class="col-md-2 control-label"></label>
            <div class="col-md-10" id="UserStoryContent">
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
                @{
                    var ruleIndex = 0;
                    foreach (var rule in Model?.Rules ?? Enumerable.Empty<Rule>())
                    {
                        var ruleName = $"Rules[{ruleIndex}].Name";
                            <input name="@ruleName" value="@rule.Name" />
                            ++ruleIndex;
                        }
                }
            </div>
        </div>
        <div><a id="AddNewRule" href="javascript:AddBlankRuleToUserStory()">Rule Blanks</a></div>
        @if (viewType == ViewType.EditExisting)
        {
            <input type="hidden" asp-for="UserStoryId" />
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="Submit" value="@editButtonContent" class="btn btn-default" />
            </div>
        </div>
    </div>
</form>